---
- name: "Set max_connections = {{ postgresql_max_connections }}"
  lineinfile:
    path: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
    regexp: '^max_connections'
    line: "max_connections = {{ postgresql_max_connections }}"
  notify: "restart postgresql"

- name: "Set TLS cert"
  when: postgres_certificate_file is defined
  lineinfile:
    path: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
    regexp: 'ssl_cert_file'
    line: "ssl_cert_file = '{{ postgres_certificate_file }}'"
  notify: "restart postgresql"

- name: "Set TLS key"
  when: postgres_certificate_key_file is defined
  lineinfile:
    path: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
    regexp: 'ssl_key_file'
    line: "ssl_key_file = '{{ postgres_certificate_key_file }}'"
  notify: "restart postgresql"

- name: "Set TLS CA chain"
  when: postgres_certificate_chain_file is defined
  lineinfile:
    path: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
    regexp: 'ssl_ca_file'
    line: "ssl_ca_file = '{{ postgres_certificate_chain_file }}'"
  notify: "restart postgresql"

- name: "Create user {{ postgresl_db_user }} without superuser and createdb privileges"
  when: postgresl_db_user is defined and postgresl_db_user_password is defined
  become: yes
  become_user: postgres
  postgresql_user:
    name: "{{ postgresl_db_user }}"
    password: "{{ postgresl_db_user_password }}"
    role_attr_flags: NOSUPERUSER,NOCREATEDB
    encrypted: yes
    state: present

- name: "Create database {{ postgresl_db_name }} owned by user {{ postgresl_db_user }}"
  when: postgresl_db_user is defined and postgresl_db_name is defined
  become: yes
  become_user: postgres
  postgresql_db:
    name: "{{ postgresl_db_name }}"
    encoding: 'UTF-8'
    owner: "{{ postgresl_db_user }}"
    state: present

- name: "Create schema {{ postgresl_db_user }} in database {{ postgresl_db_name }}"
  when: postgresl_db_user is defined and postgresl_db_name is defined
  become: yes
  become_user: postgres
  postgresql_schema:
    database: "{{ postgresl_db_name }}"
    name: "{{ postgresl_db_user }}"
    owner: "{{ postgresl_db_user }}"
    state: present
