- name: "Install lsb-release"
  apt:
    name:
      - lsb-release

- name: "Add PostgreSQL Global Development Group (PGDG) repository key"
  apt_key:
    id: ACCC4CF8
    url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
    state: present

- name: "Add PGDG repository"
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_lsb.codename }}-pgdg main"
    filename: "pgdg"
    state: present

- name: "Install packages for Postgres {{ postgresql_version }}"
  package:
    name:
      - "postgresql-{{ postgresql_version }}"
      - "postgresql-client-{{ postgresql_version }}"
      - "python-psycopg2"
      - "python-ipaddress"
      - "libpq-dev"
      - "xz-utils"
      - "sudo"
    state: present

- name: "Hold postgresql package from upgrading"
  when: postgresql_hold_upgrades
  dpkg_selections:
    name: "postgresql-{{ postgresql_version }}"
    selection: hold

- name: "Create cron job for dumping data to a file usable for filesystem backup"
  when: postgresql_daily_backup
  cron:
    name: "Everyday do the backup of the PostgreSQL DB"
    cron_file: postgresql-backup
    hour: "{{ postgresql_daily_backup_hour | string }}"
    minute: "{{ postgresql_daily_backup_minute | string }}"
    user: postgres
    job: "umask 027 ; rm /var/lib/postgresql/backup.sql.xz ; /usr/bin/pg_dumpall | xz -T 0 -3 >/var/lib/postgresql/backup.sql.xz"

- name: "create /var/lib/postgresql/dump_psql_db.sh file"
  copy:
    dest: /var/lib/postgresql/dump_psql_db.sh
    owner: postgres
    group: postgres
    mode: 0550
    content: |
      #!/bin/bash
      if [ -z "$1" ] ; then
        echo "Usage: $0 db_name"
        exit 1
      fi
      DBNAME="$1"
      FILENAME="$DBNAME"_`date +"%Y-%m-%d-%H-%M-%S"`.sql.xz
      echo "dumping PostgreSQL database $DBNAME into $PWD/$FILENAME ..."
      export LANG=cs_CZ.UTF-8
      umask 0027
      pg_dump $DBNAME | xz -T $(($(nproc)-2>1?$(nproc)-2:1)) -3 >"$FILENAME"

- name: "add rows to pg_hba.conf"
  postgresql_pg_hba:
    dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
    contype: hostssl
    databases: all
    users: all
    address: all
    method: md5
  notify: "restart postgresql"