---
- debug:
    msg: "on OS {{ ansible_os_family }}/{{ ansible_distribution }} {{ ansible_distribution_major_version }} postgresql_version is {{ postgresql_version }}"

- name: "require supported OS"
  assert:
    that: >-
      ( ansible_distribution == "Debian" and ansible_distribution_major_version in [ "10", "11", "12" ] )
      or ( ansible_os_family == "RedHat" and ansible_distribution_major_version in [ "7" ] )
    msg: "Only Debian 10-12, and CentOS/RedHat 7 are supported"

- name: "include OS-specific tasks for installation"
  include_tasks:
    file: "postgresql_install_{{ ansible_os_family }}.yml"
    apply:
      tags:
        - postgresql

- name: "Create user {{ postgresql_db_user }} without superuser and createdb privileges"
  when: postgresql_db_user is defined and postgresql_db_user_password is defined
  become: yes
  become_user: postgres
  postgresql_user:
    name: "{{ postgresql_db_user }}"
    password: "{{ postgresql_db_user_password }}"
    role_attr_flags: NOSUPERUSER,NOCREATEDB
    encrypted: yes
    state: present

- name: "Create database {{ postgresql_db_name }} owned by user {{ postgresql_db_user }}"
  when: postgresql_db_user is defined and postgresql_db_name is defined
  become: yes
  become_user: postgres
  postgresql_db:
    name: "{{ postgresql_db_name }}"
    encoding: 'UTF-8'
    owner: "{{ postgresql_db_user }}"
    state: present

- name: "Create schema {{ postgresql_db_user }} in database {{ postgresql_db_name }}"
  when: postgresql_db_user is defined and postgresql_db_name is defined
  become: yes
  become_user: postgres
  postgresql_schema:
    database: "{{ postgresql_db_name }}"
    name: "{{ postgresql_db_user }}"
    owner: "{{ postgresql_db_user }}"
    state: present
